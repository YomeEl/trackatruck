// Autogenerated

#include "truckslist.h"

TrucksList::TrucksList(const QVector<Truck>& list)
{
	for (const auto& item : list)
	{
		_trucks.append(item);
	}
}

void TrucksList::append(const Truck& item)
{
	_trucks.append(item);
}

QVariant TrucksList::data(const QModelIndex &index, int role) const
{
	switch (role) {
	case roles::ModelRole:
		return QVariant::fromValue(_trucks[index.row()].model);
	case roles::NumberRole:
		return QVariant::fromValue(_trucks[index.row()].number);
	case roles::LastMileageRole:
		return QVariant::fromValue(_trucks[index.row()].lastMileage);
	case roles::LastMaintananceDateRole:
		return QVariant::fromValue(_trucks[index.row()].lastMaintananceDate);
	default: return QVariant();
	}
}

QHash<int, QByteArray> TrucksList::roleNames() const
{
	QHash<int, QByteArray> names;

	names[roles::ModelRole] = "model";
	names[roles::NumberRole] = "number";
	names[roles::LastMileageRole] = "lastMileage";
	names[roles::LastMaintananceDateRole] = "lastMaintananceDate";

	return names;
}
