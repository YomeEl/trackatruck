// Autogenerated

#ifndef DRIVERSLIST_H
#define DRIVERSLIST_H

#include <QAbstractListModel>
#include <QVector>

#include "..\types.h"

class DriversList : public QAbstractListModel
{
public:
    DriversList(QObject *parent = nullptr) : QAbstractListModel(parent) {}
	DriversList(const QVector<Driver>& list);
    void append(const Driver& item, bool supressUpdate = false);
    void append(const QVector<Driver>& list);
    void clear();

public:
	enum roles
	{
        IdRole = Qt::UserRole + 1,
        NameRole,
		ContractDateRole
	};

	int rowCount(const QModelIndex &parent) const { Q_UNUSED(parent); return _drivers.count(); }
	QVariant data(const QModelIndex &index, int role) const;
	QHash<int, QByteArray> roleNames() const;

private:
	QVector<Driver> _drivers;
};

#endif // DRIVERSLIST_H
